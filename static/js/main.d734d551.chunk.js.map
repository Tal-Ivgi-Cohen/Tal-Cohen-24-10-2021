{"version":3,"sources":["services/storageService.js","services/utilService.js","services/weather.service.js","store/weather.action.js","cmps/CitySearch.jsx","cmps/WeatherPreview.jsx","cmps/WeatherList.jsx","cmps/MsgModal.jsx","cmps/FavoritePreview.jsx","cmps/Loader.jsx","cmps/FavoriteList.jsx","routes.js","pages/Home.jsx","pages/Favorite.jsx","cmps/Header.jsx","cmps/Footer.jsx","App.jsx","store/weather.reducer.js","store/store.js","reportWebVitals.js","index.js"],"names":["storageService","loadFromStorage","key","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","utilService","makeId","length","txt","possible","i","charAt","Math","floor","random","weatherService","saveCity","removeCity","cityId","idx","gCitys","findIndex","city","_id","splice","STORAGE_KEY","Promise","resolve","err","Error","loadCities","searchCityByKey","searchCityAutoComplete","getCityCurrCondition","get5DayForeCast","getPos","API_KEY","URL","cityKey","cityName","a","cityCurrentCondition","cityToSave","name","push","msg","reject","searchTerm","fetch","response","json","cities","message","console","log","correntCondition","isC","metric","forecast5day","lat","lon","setCity","dispatch","type","errorMsg","CitySearch","onSearch","onGetCityForecast","useState","cityInput","setCities","useEffect","search","handleCity","ev","target","value","className","list","onChange","placeholder","id","map","LocalizedName","Key","onClick","WeatherPreview","min","max","day","degree","year","Date","substr","month","dateDay","getDate","Temperature","Minimum","Value","Maximum","Day","IconPhrase","Night","WeatherList","forecast","Card","variant","EpochDate","MsgModal","onCloseModal","FavoritePreview","favoriteCity","onDeleteCity","onSetCity","temp","setTemp","unit","setUnit","getTemp","getUnit","Metric","Imperial","Unit","to","WeatherText","preventDefault","Loader","CircularProgress","FavoriteList","favoriteCities","isDarkMode","routes","path","component","props","useSelector","state","weatherModule","darkMod","error","setForecast","currentForecast","setCurrentForecast","favorites","setFavorites","setcityName","useDispatch","navigator","geolocation","getCurrentPosition","success","geoLocationError","favCities","pos","coords","latitude","longitude","forecast5Day","DailyForecasts","some","history","onAddToFavorites","setFavoritCities","loadFavCities","Header","isDark","setIsDark","celtoFer","setCeltoFer","setIsDarkMod","onSetIsDark","document","querySelector","classList","remove","add","Footer","App","exact","render","route","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d734d551.chunk.js","sourcesContent":["function loadFromStorage(key) {\n    var val = localStorage.getItem(key)\n    return (val) ? JSON.parse(val) : null;\n}\n\nfunction saveToStorage(key, val) {\n    localStorage[key] = JSON.stringify(val);\n}\n\nexport const storageService = {\n    loadFromStorage,\n    saveToStorage\n}","export const utilService = {\r\n  makeId,\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n  var txt = '';\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return txt;\r\n}","import { storageService } from './storageService.js'\r\nimport { utilService } from './utilService.js'\r\n\r\nexport const weatherService = {\r\n    saveCity,\r\n    removeCity,\r\n    loadCities,\r\n    searchCityByKey,\r\n    searchCityAutoComplete,\r\n    getCityCurrCondition,\r\n    get5DayForeCast,\r\n    getPos\r\n}\r\n\r\nconst STORAGE_KEY = 'city'\r\nconst API_KEY = 'ZmyFKscWMr8SuxmDpLK2xGRB0nbLbeZ9'\r\nconst URL ='https://dataservice.accuweather.com'\r\nconst gCitys = []\r\n\r\nasync function saveCity(cityKey, cityName) {\r\n    try {\r\n        const cityCurrentCondition = await weatherService.getCityCurrCondition(cityKey)\r\n        const cityToSave = {\r\n            _id: utilService.makeId(),\r\n            name: cityName,\r\n            cityCurrentCondition,\r\n            cityKey\r\n        }\r\n        gCitys.push(cityToSave)\r\n        storageService.saveToStorage(STORAGE_KEY, gCitys)\r\n        return Promise.resolve(cityToSave);\r\n    } catch (err) {\r\n        const msg = err\r\n        return Promise.reject(msg)\r\n    }\r\n}\r\nfunction removeCity(cityId) {\r\n    try {\r\n        const idx = gCitys.findIndex(city => city._id === cityId)\r\n        gCitys.splice(idx, 1)\r\n        storageService.saveToStorage(STORAGE_KEY, gCitys)\r\n        return Promise.resolve();\r\n    } catch (err) {\r\n        const msg = err\r\n        throw new Error(msg)\r\n    }\r\n}\r\nfunction loadCities() {\r\n    try {\r\n        const cities = storageService.loadFromStorage(STORAGE_KEY)||[]\r\n        return cities;\r\n    } catch (err) {\r\n        const msg = err\r\n        throw new Error(msg)\r\n    }\r\n}\r\nasync function searchCityAutoComplete(searchTerm) {\r\n    try {\r\n        let response = await fetch(`${URL}/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${searchTerm}`)\r\n        const cities = await response.json()\r\n        return cities\r\n    } catch (err) {\r\n        const msg = (err.message);\r\n       console.log(msg)\r\n    }\r\n}\r\nasync function searchCityByKey(cityKey) {\r\n    try {\r\n        let response = await fetch(`${URL}/locations/v1/${cityKey}?apikey=${API_KEY}`)\r\n        const city = await response.json()\r\n        return city\r\n    } catch (err) {\r\n        const msg = (err.message)\r\n        Promise.reject(msg)\r\n    }\r\n}\r\n\r\nasync function getCityCurrCondition(cityKey) {\r\n    try {\r\n        let response = await fetch(`${URL}/currentconditions/v1/${cityKey}?apikey=${API_KEY}&details=false`)\r\n        const correntCondition = await response.json()\r\n        return correntCondition\r\n    } catch (err) {\r\n        const msg = (err.message)\r\n        Promise.reject(msg);\r\n    }\r\n}\r\n\r\nasync function get5DayForeCast(cityKey, isC) {\r\n    const metric = () => {\r\n        return isC === '℃' ? true : false\r\n    }\r\n    try {\r\n        let response = await fetch(`${URL}/forecasts/v1/daily/5day/${cityKey}?apikey=${API_KEY}&metric=${metric()}`)\r\n        const forecast5day = await response.json()\r\n        return forecast5day\r\n    } catch (err) {\r\n        const msg = (err.message)\r\n        Promise.reject(msg);\r\n    }\r\n}\r\n\r\nasync function getPos(lat, lon) {\r\n    try {\r\n        const response = await fetch(`${URL}/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${lat},${lon}`)\r\n        const city = await response.json()\r\n        return city\r\n    } catch (err) {\r\n        const msg = (err.message)\r\n        Promise.reject(msg);\r\n    }\r\n}","export function setCity(cityKey) {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_CITY', cityKey })\r\n        } catch (err) {\r\n            dispatch({ type: 'ERROR', err })\r\n        }\r\n    }\r\n}\r\nexport function setIsDarkMod(isDark) {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_DARKMOD', isDark })\r\n        } catch (err) {\r\n            dispatch({ type: 'ERROR', err })\r\n        }\r\n    }\r\n}\r\nexport function setDegree(degree) {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_DEGREE', degree })\r\n        } catch (err) {\r\n            dispatch({ type: 'ERROR', err })\r\n        }\r\n    }\r\n}\r\n\r\nexport function errorMsg(msg) {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({ type: 'ERROR', msg })\r\n        } catch (err) {\r\n            console.log('there was an error', err);\r\n        }\r\n    }\r\n}","import { useEffect, useState } from 'react'\nimport SearchIcon from '@mui/icons-material/Search';\n\nexport const CitySearch = ({ onSearch, onGetCityForecast }) => {\n    const [cityInput, setCity] = useState('')\n    const [cities, setCities] = useState(null)\n\n    useEffect(() => {\n        const search = async () => {\n            const cities = await onSearch(cityInput)\n            setCities(cities)\n            return;\n        }\n        search()\n        return () => {\n        }\n        // eslint-disable-next-line\n    }, [cityInput])\n\n    const handleCity = async (ev) => {\n        setCity(ev.target.value)\n    }\n    const getCityForecast = () => {\n        onGetCityForecast(cities[0].Key)\n    }\n    return (\n        <div className=\"city-search flex\">\n            <input type=\"text\" list=\"cities\" onChange={handleCity} name=\"cityInput\"\n                value={cityInput} placeholder=\"Search city 🔍\" />\n            {cities && <datalist id=\"cities\">\n                {cities.map((city) => {\n                    return <option key={city.Key} value={city.LocalizedName} />\n                })}\n            </datalist>}\n            <button className=\"btn-search\" onClick={getCityForecast}><SearchIcon /></button>\n        </div>\n    )\n}","export const WeatherPreview = ({ day, degree }) => {\n\n    const getTemp = (min, max) => {\n        if (degree === '℃') {\n            const avgTemp = '' + (min + max) / 2\n            return avgTemp.substr(0, 4)\n        } else {\n            const avgTemp = '' + (((min + max) / 2) * 9 / 5 + 32)\n            return avgTemp.substr(0, 4)\n        }\n    }\n    const getDate = () => {\n        const year = day.Date.substr(0, 4)\n        const month = day.Date.substr(5, 2)\n        const dateDay = day.Date.substr(8, 2)\n        const date = `${dateDay}/${month}/${year}`\n        return date\n    }\n\n    return (\n        <div className={`weather-preview flex column align-center justify-center`}>\n            <span>{getDate()}</span>\n            <div>\n                <span className=\"degree\">\n                    {getTemp(day.Temperature.Minimum.Value, day.Temperature.Maximum.Value)}</span>\n                <span className=\"degree\">{degree}</span>\n            </div>\n            <div className=\"fillflex column align-center justify-center\">\n            <span className=\"feel-color\">Feel in day: </span>  {day.Day.IconPhrase}\n            </div>\n            <div className=\"flex column align-center justify-center\">\n            <span className=\"feel-color\">Feel in night:</span>{day.Night.IconPhrase}\n            </div>\n        </div>\n    )\n}","import { Card } from '@material-ui/core'\nimport { WeatherPreview } from './WeatherPreview.jsx'\n\nexport const WeatherList = ({ forecast, degree }) => {\n\n    return (\n        <div className='weather-list'>\n            {forecast.map(day => {\n                return <Card key={day.EpochDate} variant=\"outlined\" className=\"weather-preview-card\">\n                    <WeatherPreview day={day} degree={degree} /></Card>\n            })}\n        </div>\n    )\n}","export const MsgModal = ({ msg, onCloseModal }) => {\n\n    return (\n        <div className=\"msg-modal\">\n            <section className=\"modal-main flex column justify-center align-center\">\n                {msg}\n                <br/>\n                <button type=\"close-modal-button\" onClick={onCloseModal}>\n                    Close\n                </button>\n            </section>\n        </div>\n    );\n};","import { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport const FavoritePreview = ({ favoriteCity, onDeleteCity, onSetCity, degree }) => {\n    const [temp, setTemp] = useState('')\n    const [unit, setUnit] = useState('')\n\n    useEffect(() => {\n        setTemp(getTemp())\n        setUnit(getUnit())\n        // eslint-disable-next-line\n    }, [degree])\n\n    const onPreviewClick = () => {\n        onSetCity(favoriteCity.cityKey)\n    }\n    const removeCity = (ev) => {\n        ev.preventDefault()\n        onDeleteCity(favoriteCity._id)\n    }\n    const getTemp = () => {\n        if (degree === '℃') {\n            return favoriteCity.cityCurrentCondition[0].Temperature.Metric.Value\n        } else {\n            return favoriteCity.cityCurrentCondition[0].Temperature.Imperial.Value\n        }\n    }\n    const getUnit = () => {\n        if (degree === '℃') {\n            return favoriteCity.cityCurrentCondition[0].Temperature.Metric.Unit\n        } else {\n            return favoriteCity.cityCurrentCondition[0].Temperature.Imperial.Unit\n        }\n    }\n\n    return (\n        <div className=\"fav-preview\" onClick={onPreviewClick}>\n            <Link to=\"/\" className=\"favPreview-link\">\n                <h2>{favoriteCity.name}</h2>\n                <div className=\"fav-content flex column justify-center align-center\">\n                    <span>\n                        {temp && <span>{temp}</span>}{temp && <span>{unit}</span>}\n                    </span>\n                    <span>\n                        <span className=\"feel-color\">Feel in day: </span>\n                        {favoriteCity.cityCurrentCondition[0].WeatherText}\n                    </span>\n                    <button className=\"delete-btn\" onClick={(ev) => removeCity(ev)}><DeleteIcon /></button>\n                </div>\n            </Link>\n        </div>\n    )\n}","import { CircularProgress } from '@material-ui/core';\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}","import { Card } from '@material-ui/core'\nimport { FavoritePreview } from './FavoritePreview.jsx'\nimport { Loader } from './Loader.jsx'\n\nexport const FavoriteList = ({ favoriteCities, onDeleteCity, onSetCity, isDarkMode, degree}) => {\n    if (!favoriteCities || favoriteCities.length === 0) return <Loader />;\n    return (\n        <div className='fav-list'>\n            {favoriteCities.map(favoriteCity => {\n                return <Card key={favoriteCity._id} variant=\"outlined\">\n                    < FavoritePreview favoriteCity={favoriteCity}\n                        onDeleteCity={onDeleteCity} onSetCity={onSetCity}\n                        isDarkMode={isDarkMode} degree={degree} />\n                </Card>\n            }\n            )}\n        </div>\n    )\n}","import { Home } from './pages/Home.jsx';\r\nimport { Favorite } from './pages/Favorite.jsx';\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/home',\r\n        component: Home,\r\n    },\r\n    {\r\n        path: '/favorite',\r\n        component: Favorite,\r\n    },\r\n]","import { useEffect, useState } from 'react'\nimport { weatherService } from '../services/weather.service.js'\nimport { errorMsg, setCity } from '../store/weather.action.js';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CitySearch } from '../cmps/CitySearch';\nimport { WeatherList } from '../cmps/WeatherList'\nimport { MsgModal } from '../cmps/MsgModal'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport const Home = (props) => {\n    const { cityKey, darkMod, degree, error } = useSelector(state => state.weatherModule)\n    const [forecast, setForecast] = useState('')\n    const [currentForecast, setCurrentForecast] = useState('')\n    const [favorites, setFavorites] = useState('')\n    const [cityName, setcityName] = useState('')\n    const dispatch = useDispatch()\n    let cityId\n\n    useEffect(() => {\n        if (cityKey === '') {\n            navigator.geolocation.getCurrentPosition(success, geoLocationError)\n        } else {\n            try {\n                onGetCityForecast(cityKey)\n            } catch (err) {\n                dispatch(errorMsg(err))\n            }\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n        try {\n            const loadCities = async () => {\n                const favCities = await weatherService.loadCities()\n                setFavorites(favCities)\n            }\n            loadCities()\n        } catch (err) {\n            dispatch(errorMsg(err))\n        }\n        return () => {\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    const success = async (pos) => {\n        try {\n            const lat = pos.coords.latitude\n            const lon = pos.coords.longitude\n            const city = await weatherService.getPos(lat, lon)\n            dispatch(setCity(city.cityKey))\n            setcityName(city.LocalizedName)\n            await onGetCityForecast(city.Key)\n        } catch (err) {\n            dispatch(errorMsg(err))\n        }\n    }\n    const geoLocationError = () => {\n        try {\n            dispatch(setCity('215854'))\n            dispatch(errorMsg('there was an error to get location'))\n        } catch (err) {\n            dispatch(errorMsg(err))\n        }\n    }\n\n    const onSearch = async (searchTerm) => {\n        try {\n            const search = await weatherService.searchCityAutoComplete(searchTerm)\n            return search\n        } catch (err) {\n            dispatch(errorMsg(err))\n        }\n    }\n    const onGetCityForecast = async (cityKey) => {\n        try {\n            dispatch(setCity(cityKey))\n            const forecast5Day = await weatherService.get5DayForeCast(cityKey, degree)\n            const currentForecast = await weatherService.getCityCurrCondition(cityKey)\n            const city = await weatherService.searchCityByKey(cityKey)\n            setCurrentForecast(currentForecast[0])\n            setForecast(forecast5Day.DailyForecasts)\n            setcityName(city.LocalizedName)\n        } catch (err) {\n            dispatch(errorMsg(err))\n        }\n    }\n    const getTemp = () => {\n        if (degree === '℃') {\n            return currentForecast.Temperature.Metric.Value\n        } else {\n            return currentForecast.Temperature.Imperial.Value\n        }\n    }\n    const onAddToFavorites = () => {\n        try {\n            weatherService.saveCity(cityKey, cityName)\n            dispatch(errorMsg('City added to favorites'))\n        } catch (err) {\n            dispatch(errorMsg(err))\n        }\n    }\n    const onDeleteCity = () => {\n        try {\n            weatherService.removeCity(cityId)\n            dispatch(errorMsg('City removed'))\n            props.history.push('/');\n\n        } catch (err) {\n            dispatch(errorMsg(err))\n        }\n    }\n    const setIsFavorite = () => {\n        if (!favorites || favorites.length === 0) return false\n        return favorites.some(city => {\n            cityId = city._id\n            return city.cityKey === cityKey\n        })\n    }\n    const onCloseModal = () => {\n        dispatch(errorMsg(''))\n    }\n\n    return (\n        <section>\n            <div className=\"main-container\">\n                <div className={`weather-page flex column`}>\n                    <div>\n                        <CitySearch onSearch={onSearch} onGetCityForecast={onGetCityForecast} />\n                    </div>\n                    <div className=\"city-info flex column\">\n                        {cityName && <h1>{cityName}</h1>}\n                        {currentForecast && <div>{currentForecast.WeatherText}</div>}\n                        {forecast && <div className=\"current-temp\">{getTemp()}{degree}</div>}\n                    </div>\n                    {forecast &&\n                        <WeatherList forecast={forecast} degree={degree} darkMod={darkMod} />\n                    }\n                    {setIsFavorite() ? <button className=\"remove-btn\"\n                        onClick={onDeleteCity}><DeleteIcon /></button>\n                        : <button className=\"add-btn\"\n                            onClick={() => onAddToFavorites()}> <FavoriteIcon /></button>}\n                </div>\n                {error && <MsgModal msg={error} onCloseModal={onCloseModal} />}\n            </div>\n        </section >\n    )\n}","import { useEffect, useState } from 'react'\nimport { weatherService } from '../services/weather.service.js'\nimport { errorMsg, setCity } from '../store/weather.action.js';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FavoriteList } from '../cmps/FavoriteList'\nimport { MsgModal } from '../cmps/MsgModal'\n\nexport const Favorite = (props) => {\n    const { degree, error } = useSelector(state => state.weatherModule)\n    const [favoriteCities, setFavoritCities] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const loadFavCities = async () => {\n            const favCities = await weatherService.loadCities()\n            setFavoritCities(favCities)\n        }\n        loadFavCities()\n        return () => {\n        }\n        // eslint-disable-next-line\n    }, [error])\n\n    const onDeleteCity = (cityId) => {\n        try {\n            weatherService.removeCity(cityId)\n            const cities = weatherService.loadCities()\n            setFavoritCities(cities)\n            dispatch(errorMsg('City removed'))\n            props.history.push('/');\n        } catch (err) {\n            dispatch(errorMsg(err))\n        }\n    }\n    const onSetCity = (cityKey) => {\n        try {\n            dispatch(setCity(cityKey))\n        } catch (err) {\n            dispatch(errorMsg(err))\n        }\n    }\n    const onCloseModal = () => {\n        dispatch(errorMsg(''))\n    }\n    return (\n        <div>\n            <section className='main-container'>\n                <div className={`fav-page flex column`}>\n                    {favoriteCities && <FavoriteList favoriteCities={favoriteCities} onDeleteCity={onDeleteCity} onSetCity={onSetCity} degree={degree} />}\n                </div>\n                {error && <MsgModal msg={error} onCloseModal={onCloseModal} />}\n            </section>\n        </div>\n    )\n}","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { setDegree, setIsDarkMod } from '../store/weather.action.js'\nimport { MsgModal } from './MsgModal'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport HomeIcon from '@material-ui/icons/Home';\n\nexport function Header() {\n    const { darkMod, error } = useSelector(state => state.weatherModule)\n    const [isDark, setIsDark] = useState(false)\n    const [celtoFer, setCeltoFer] = useState('℃')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setDegree(celtoFer))\n        // eslint-disable-next-line\n    }, [celtoFer])\n\n    useEffect(() => {\n        dispatch(setIsDarkMod(isDark))\n        // eslint-disable-next-line\n    }, [isDark])\n\n    const setClassName = () => {\n        return darkMod ? 'app-header darker' : 'app-header'\n    }\n    const onSetIsDark = () => {\n        if (isDark) {\n            document.querySelector('.app').classList.remove('dark')\n        } else {\n            document.querySelector('.app').classList.add('dark')\n        }\n        setIsDark(!isDark)\n    }\n    const degreeType = () => {\n        if (celtoFer === '℃') setCeltoFer('℉')\n        else setCeltoFer('℃')\n    }\n\n    return (\n        <header className={setClassName()}>\n            <div className=\"main-nav flex space-evenly\">\n                <div className=\"actions-btn\">\n                    {isDark ? <button onClick={onSetIsDark}><LightModeIcon /></button> :\n                        <button onClick={onSetIsDark}><DarkModeIcon /></button>}\n                    <button onClick={degreeType}><ThermostatIcon />{celtoFer} </button>\n                </div>\n                <div>\n                    <div className=\"header-title flex\">\n                        <h1>Talco Weather</h1>\n                    </div>\n                </div>\n                <nav className=\"flex\">\n                    <NavLink to=\"/\"><HomeIcon /></NavLink>\n                    <NavLink to=\"/favorite\"><FavoriteIcon /></NavLink>\n                </nav>\n            </div>\n            {error && <MsgModal msg={error} />}\n        </header>\n    )\n}","export const Footer = () => {\n  return (\n    <footer className=\"app-footer\">\n      <p>Copyrights Talco Weather By Tal Cohen 2021 &copy; </p>\n    </footer>\n  )\n}","import { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { routes } from './routes.js';\nimport { Header } from './cmps/Header.jsx';\nimport { Footer } from './cmps/Footer.jsx';\nimport './assets/styles/styles.scss';\n\nexport const App = () => {\n  return (\n    <Router>\n      <div className='app'>\n        <Header />\n        <main>\n          <Switch>\n            <Route\n              exact\n              path='/'\n              render={() => <Redirect to='/home' />}\n            ></Route>\n            {routes.map((route) => (\n              <Route\n                key={route.path}\n                exact\n                component={route.component}\n                path={route.path}\n              />\n            ))}\n          </Switch>\n        </main>\n        <footer>\n          <Footer />\n        </footer>\n      </div>\n    </Router>\n  );\n}\n","const initialState = {\r\n    cityKey: '',\r\n    error: '',\r\n    darkMod: false,\r\n    degree:'℃',\r\n}\r\n\r\nexport function weatherReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CITY':\r\n            return { ...state, cityKey: action.cityKey }\r\n        case 'SET_DARKMOD':\r\n            return { ...state, darkMod: action.isDark }\r\n        case 'SET_DEGREE':\r\n            return { ...state, degree: action.degree }\r\n        case 'ERROR':\r\n            return { ...state, error: action.msg }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { weatherReducer } from './weather.reducer.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    weatherModule: weatherReducer,\r\n});\r\n\r\n\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App.jsx';\nimport { store } from './store/store.js'\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}